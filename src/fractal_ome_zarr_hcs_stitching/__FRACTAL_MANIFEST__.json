{
  "manifest_version": "2",
  "task_list": [
    {
      "name": "Stitching Task",
      "input_types": {
        "stitched": false
      },
      "output_types": {
        "stitched": true
      },
      "category": "Registration",
      "tags": [
        "multiview-stitcher",
        "Fusion",
        "Registration",
        "Stitching",
        "2D",
        "3D"
      ],
      "executable_parallel": "stitching_task.py",
      "meta_parallel": {
        "cpus_per_task": 1,
        "mem": 4000
      },
      "args_schema_parallel": {
        "$defs": {
          "StitchingChannelInputModel": {
            "description": "Channel input for stitching.",
            "properties": {
              "wavelength_id": {
                "title": "Wavelength Id",
                "type": "string",
                "description": "Unique ID for the channel wavelength, e.g. `A01_C01`. Can only be specified if label is not set."
              },
              "label": {
                "title": "Label",
                "type": "string",
                "description": "Name of the channel. Can only be specified if wavelength_id is not set."
              }
            },
            "title": "StitchingChannelInputModel",
            "type": "object"
          }
        },
        "additionalProperties": false,
        "properties": {
          "zarr_url": {
            "title": "Zarr Url",
            "type": "string",
            "description": "Absolute path to the OME-Zarr image."
          },
          "channel": {
            "$ref": "#/$defs/StitchingChannelInputModel",
            "title": "Channel",
            "description": "Channel for registration; requires either `wavelength_id` (e.g. `A01_C01`) or `label` (e.g. `DAPI`), but not both."
          },
          "overwrite_input": {
            "default": false,
            "title": "Overwrite Input",
            "type": "boolean",
            "description": "Whether to override the original, not stitched image with the output of this task."
          },
          "output_group_suffix": {
            "default": "fused",
            "title": "Output Group Suffix",
            "type": "string",
            "description": "Suffix of the new OME-Zarr image to write the fused image to."
          },
          "registration_resolution_level": {
            "default": 0,
            "title": "Registration Resolution Level",
            "type": "integer",
            "description": "Resolution level to use for registration."
          },
          "registration_on_z_proj": {
            "default": true,
            "title": "Registration On Z Proj",
            "type": "boolean",
            "description": "Whether to perform registration on a maximum projection along z in case of 3D data."
          }
        },
        "required": [
          "zarr_url",
          "channel"
        ],
        "type": "object",
        "title": "StitchingTask"
      },
      "docs_info": "## stitching_task\nStitches FOVs from an OME-Zarr image.\n\nPerforms registration and fusion of FOVs indicated\nin the FOV_ROI_table of the OME-Zarr image. Writes the\nfused image back to a \"fused\" group in the same Zarr array.\n\nTodo:\n  - include and update output metadata / FOV ROI table\n  - test 2D / 3D\n  - optimize for large data\n  - currently optimized for search first mode, need to implement\n    registration pair finding for \"grid\" (?) mode\n",
      "docs_link": "https://github.com/m-albert/fractal-ome-zarr-hcs-stitching"
    }
  ],
  "has_args_schemas": true,
  "args_schema_version": "pydantic_v2",
  "authors": "Marvin Albert, Joel Luethi, Nicole Repina"
}
